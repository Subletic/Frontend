stages:
  - build
  - verification
  - build-docker
  - deploy

build:
  stage: build
  image: node:16-alpine
  before_script:
    - npm install
  script:
    - npm run build:prod

lint:
  stage: verification
  image: node:16-alpine
  script:
    - npm ci
    - npm run lint
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull
  allow_failure: true

test:
  stage: verification
  image: trion/ng-cli-karma:16.0.1
  script:
    - npm ci
    - ng test --no-watch --code-coverage
  coverage: '/Statements.*?(\d+(?:\.\d+)?)%/'
  artifacts:
    paths:
      - coverage/

build-docker:
  variables:
    KANIKO_ARGS: ""
    KANIKO_BUILD_CONTEXT: $CI_PROJECT_DIR
  stage: build-docker
  image:
    name: gcr.io/kaniko-project/executor:v1.10.0-debug
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - mkdir -p /kaniko/.docker
    - DOCKERFILE_PATH=${DOCKERFILE_PATH:-"$KANIKO_BUILD_CONTEXT/Dockerfile"}
    - /kaniko/executor --context $KANIKO_BUILD_CONTEXT --dockerfile $DOCKERFILE_PATH --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $KANIKO_ARGS --destination $CI_REGISTRY_IMAGE:latest $KANIKO_ARGS

deploy:
  variables:
    CI_REGISTRY_IMAGE: "gitlab.dit.htwk-leipzig.de:5050/live-stream-editor-zur-korrektur-von-untertiteln/frontend:latest"
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  script: |
    echo "Deploying to production server..."
    apt-get install -y sshpass
    sshpass -p $DEPLOYMENT_SERVER_PASSWORD projekt2@141.57.21.99
    podman-compose down
    podman pull $CI_REGISTRY_IMAGE
    podman-compose up -d
    exit
